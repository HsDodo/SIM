// Code generated by goctl. DO NOT EDIT.
// Source: chat_rpc.proto

package chatservice

import (
	"context"

	"server/chat/rpc/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	NoneResponse    = proto.NoneResponse
	UserChatRequest = proto.UserChatRequest

	ChatService interface {
		UserChat(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*NoneResponse, error)
	}

	defaultChatService struct {
		cli zrpc.Client
	}
)

func NewChatService(cli zrpc.Client) ChatService {
	return &defaultChatService{
		cli: cli,
	}
}

func (m *defaultChatService) UserChat(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*NoneResponse, error) {
	client := proto.NewChatServiceClient(m.cli.Conn())
	return client.UserChat(ctx, in, opts...)
}
