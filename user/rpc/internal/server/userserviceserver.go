// Code generated by goctl. DO NOT EDIT.
// Source: user_rpc.proto

package server

import (
	"context"

	"server/user/rpc/internal/logic"
	"server/user/rpc/internal/svc"
	"server/user/rpc/proto"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	proto.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) CreateUser(ctx context.Context, in *proto.UserCreateRequest) (*proto.UserInfoResponse, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServiceServer) UserInfo(ctx context.Context, in *proto.UserInfoRequest) (*proto.UserInfoResponse, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServiceServer) UserListInfo(ctx context.Context, in *proto.UserListInfoRequest) (*proto.UserListInfoResponse, error) {
	l := logic.NewUserListInfoLogic(ctx, s.svcCtx)
	return l.UserListInfo(in)
}

func (s *UserServiceServer) FriendList(ctx context.Context, in *proto.FriendListRequest) (*proto.UserListInfoResponse, error) {
	l := logic.NewFriendListLogic(ctx, s.svcCtx)
	return l.FriendList(in)
}

func (s *UserServiceServer) IsFriend(ctx context.Context, in *proto.IsFriendRequest) (*proto.IsFriendResponse, error) {
	l := logic.NewIsFriendLogic(ctx, s.svcCtx)
	return l.IsFriend(in)
}

func (s *UserServiceServer) UserOnlineList(ctx context.Context, in *proto.UserOnlineListRequest) (*proto.UserOnlineListResponse, error) {
	l := logic.NewUserOnlineListLogic(ctx, s.svcCtx)
	return l.UserOnlineList(in)
}

func (s *UserServiceServer) GroupMemberOnlineList(ctx context.Context, in *proto.GroupMemberOnlineListRequest) (*proto.GroupMemberOnlineListResponse, error) {
	l := logic.NewGroupMemberOnlineListLogic(ctx, s.svcCtx)
	return l.GroupMemberOnlineList(in)
}

func (s *UserServiceServer) UserBaseInfo(ctx context.Context, in *proto.UserInfoRequest) (*proto.UserBaseInfoResponse, error) {
	l := logic.NewUserBaseInfoLogic(ctx, s.svcCtx)
	return l.UserBaseInfo(in)
}
