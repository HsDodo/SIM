// Code generated by goctl. DO NOT EDIT.
package types

type AddGroupRequest struct {
	UserID               uint                  `header:"userID"`
	GroupID              uint                  `json:"groupID"`
	Verify               string                `json:"verify,optional"`               // 验证消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional"` // 问题和答案
}

type GroupMemberInfo struct {
	UserID          uint   `json:"userId"`
	UserNickname    string `json:"userNickname"`
	Avatar          string `json:"avatar"`
	IsOnline        bool   `json:"isOnline"`
	Role            int8   `json:"role"`
	MemberNickname  string `json:"memberNickname"`
	CreatedAt       string `json:"createdAt"`
	NewMsgDate      string `json:"newMsgDate"`
	IsFriend        bool   `json:"isFriend"`
	ProhibitionTime *int   `json:"prohibitionTime"`
}

type GroupMyResponse struct {
	GroupID          uint   `json:"groupID"`
	GroupName        string `json:"groupName"`
	GroupAvatar      string `json:"groupAvatar"`
	GroupMemberCount int    `json:"groupMemberCount"`
	Role             int8   `json:"role"` // 角色
	Mode             int8   `json:"mode"` // 模式  1 我创建的群聊 2 我加入的群聊
}

type GroupSearchResponse struct {
	GroupID         uint   `json:"groupId"`
	GroupName       string `json:"groupName"`
	GroupDesc       string `json:"groupDesc"`
	Avatar          string `json:"avatar"`
	IsInGroup       bool   `json:"isInGroup"`       // 我是否在群里面
	UserCount       int    `json:"userCount"`       // 群用户总数
	UserOnlineCount int    `json:"userOnlineCount"` // 群用户在线总数
}

type GroupSessionResponse struct {
	GroupID       uint   `json:"groupId"`
	GroupName     string `json:"groupName"`
	GroupAvatar   string `json:"groupAvatar"`
	NewMsgDate    string `json:"newMsgDate"`    // 最新的消息
	NewMsgPreview string `json:"newMsgPreview"` // 最新的消息内容
	IsTop         bool   `json:"isTop"`         // 是否置顶
}

type GroupValidInfoResponse struct {
	ID                   uint                  `json:"id"` // 验证id
	GroupID              uint                  `json:"grouId"`
	UserID               uint                  `json:"userId"`
	UserNickname         string                `json:"userNickname"`
	UserAvatar           string                `json:"userAvatar"`
	Status               int8                  `json:"status"`               // 状态
	Flag                 string                `json:"flag"`                 // send  rev
	AdditionalMessages   string                `json:"additionalMessages"`   // 附加消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"` // 验证问题
	GroupName            string                `json:"groupName"`
	Avatar               string                `json:"avatar"` // 群头像
	CreatedAt            string                `json:"createdAt"`
	Type                 int8                  `json:"type"` // 类型  1 加群  2 退群
}

type GroupValidRequest struct {
	UserID  uint `header:"userID"`
	GroupID uint `path:"groupID"`
}

type GroupValidResponse struct {
	Verification         int8                 `json:"verification"`         // 好友验证
	VerificationQuestion VerificationQuestion `json:"verificationQuestion"` // 问题和答案，但是答案不要返回
}

type GroupfriendsResponse struct {
	UserID    uint   `json:"userID"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	IsInGroup bool   `json:"isInGroup"` // 是否在群里面
}

type NoResponse struct {
}

type UserInfo struct {
	UserID   uint   `header:"userID"`
	Avatart  string `json:"avatar"`
	Nickname string `json:"nickname"`
}

type VerificationQuestion struct {
	Problem1 *string `json:"problem1,optional" conf:"problem1"`
	Problem2 *string `json:"problem2,optional" conf:"problem2"`
	Problem3 *string `json:"problem3,optional" conf:"problem3"`
	Answer1  *string `json:"answer1,optional" conf:"answer1"`
	Answer2  *string `json:"answer2,optional" conf:"answer2"`
	Answer3  *string `json:"answer3,optional" conf:"answer3"`
}

type GroupChatRequest struct {
	UserID uint `header:"userID"`
}

type GroupCreateRequest struct {
	UserID     uint   `header:"UserID"`
	Mode       int8   `json:"mode,optional"` // 模式  1 直接创建模式 2 选人创建模式
	GroupName  string `json:"name,optional"`
	IsSearch   bool   `json:"isSearch,optional"`   // 是否可以搜到
	Size       int    `json:"size,optional"`       // 群规模
	UserIDList []uint `json:"userIdList,optional"` // 用户id列表
}

type GroupHistoryDeleteRequest struct {
	UserID    uint   `header:"userID"`
	GroupID   uint   `path:"groupID"`
	Page      int    `form:"page,optional"`
	PageSize  int    `form:"pageSize,optional"`
	MsgIDList []uint `json:"msgIdList"`
}

type GroupHistoryRequest struct {
	UserID   uint `header:"userID"`
	GroupID  uint `path:"groupID"`
	Page     int  `form:"page,optional"`
	PageSize int  `form:"pageSize,optional"`
}

type GroupInfoRequest struct {
	UserID  uint `header:"userID"`
	GroupID uint `json:"groupID"`
}

type GroupInfoResponse struct {
	GroupID              uint                  `json:"groupId"`                                                  // 群id
	GroupName            string                `json:"groupName"`                                                // 群名称
	GroupDesc            string                `json:"groupDesc"`                                                // 群介绍
	MemberCount          int                   `json:"memberCount"`                                              // 群用户总数
	MemberOnlineCount    int                   `json:"memberOnlineCount"`                                        // 群在线用户总数
	Avatar               string                `json:"avatar"`                                                   // 群头像
	Creator              UserInfo              `json:"creator"`                                                  // 群主
	AdminList            []UserInfo            `json:"adminList"`                                                // 管理员列表
	Role                 int8                  `json:"role"`                                                     // 角色  1 群主 2 群管理员 3 群成员
	IsProhibition        bool                  `json:"isProhibition"`                                            // 是否开启了全员禁言
	ProhibitionTime      *int                  `json:"prohibitionTime"`                                          // 自己的禁言时间
	IsSearch             bool                  `json:"isSearch"`                                                 // 是否可以被搜索
	Verification         *int8                 `json:"verification,optional"  conf:"verification"`               // 群验证
	IsInvite             *bool                 `json:"isInvite,optional"  conf:"is_invite"`                      // 是否可邀请好友
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional"  conf:"is_temporary_session"` // 是否开启临时会话
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
}

type GroupMemberAddRequest struct {
	UserID       uint   `header:"userID"`
	GroupID      uint   `json:"groupID"`      // 群id
	MemberIDList []uint `json:"memberIdList"` // 成员id列表
}

type GroupMemberNicknameUpdateRequest struct {
	UserID   uint   `header:"userID"`
	GroupID  uint   `json:"groupID"`  // 群id
	MemberID uint   `json:"memberId"` // 成员id
	Nickname string `json:"nickname"` // 昵称
}

type GroupMemberRemoveRequest struct {
	UserID   uint `header:"userID"`
	GroupID  uint `form:"groupID"`  // 群id
	MemberID uint `form:"memberId"` // 成员id
}

type GroupMemberRequest struct {
	UserID  uint   `header:"userID"`
	GroupID uint   `form:"groupID"`
	Page    int    `form:"page,optional"`
	Limit   int    `form:"limit,optional"`
	Sort    string `form:"sort,optional"`
}

type GroupMemberResponse struct {
	List  []GroupMemberInfo `json:"list"`
	Count int               `json:"count"`
}

type GroupMemberRoleUpdateRequest struct {
	UserID   uint `header:"userID"`
	GroupID  uint `json:"groupID"`  // 群id
	MemberID uint `json:"memberId"` // 成员id
	Role     int8 `json:"role"`
}

type GroupMyListResponse struct {
	List  []GroupMyResponse `json:"list"`
	Count int               `json:"count"`
}

type GroupMyRequest struct {
	UserID   uint `header:"userID"`
	Mode     int8 `form:"mode"` // 1 我创建的群聊 2 我加入的群聊
	Page     int  `form:"page,optional"`
	PageSize int  `form:"pageSize,optional"`
}

type GroupProhibitionUpdateRequest struct {
	UserID          uint `header:"userID"`
	GroupID         uint `json:"groupID"` // 群id
	MemberID        uint `json:"memberID"`
	ProhibitionTime *int `json:"prohibitionTime,optional"` // 禁言时间 单位分钟
}

type GroupRemoveRequest struct {
	UserID  uint `header:"userID"`
	GroupID uint `path:"GroupID"` // 群id
}

type GroupSearchListResponse struct {
	List  []GroupSearchResponse `json:"list"`
	Count int                   `json:"count"`
}

type GroupSearchRequest struct {
	UserID   uint   `header:"userID"`
	Key      string `form:"key,optional"`
	Page     int    `form:"page,optional"`
	PageSize int    `form:"pageSize,optional"`
}

type GroupSessionListResponse struct {
	List  []GroupSessionResponse `json:"list"`
	Count int                    `json:"count"`
}

type GroupSessionRequest struct {
	UserID   uint `header:"userID"`
	Page     int  `form:"page,optional"`
	PageSize int  `form:"pageSize,optional"`
}

type GroupTopRequest struct {
	UserID  uint `header:"userID"`
	GroupID uint `json:"groupID"` // 需要置顶的群id
	IsTop   bool `json:"isTop"`   // true 置顶  false取消置顶
}

type GroupUpdateRequest struct {
	UserID               uint                  `header:"userID"`
	GroupID              uint                  `json:"groupID"`                                                  // 群id
	IsSearch             *bool                 `json:"isSearch,optional"  conf:"is_search"`                      // 是否可以被搜索
	Avatar               *string               `json:"avatar,optional"  conf:"avatar"`                           // 群头像
	Abstract             *string               `json:"abstract,optional"  conf:"abstract"`                       // 群简介
	Title                *string               `json:"title,optional"  conf:"title"`                             // 群名
	Verification         *int8                 `json:"verification,optional"  conf:"verification"`               // 群验证
	IsInvite             *bool                 `json:"isInvite,optional"  conf:"is_invite"`                      // 是否可邀请好友
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional"  conf:"is_temporary_session"` // 是否开启临时会话
	IsProhibition        *bool                 `json:"isProhibition,optional" conf:"is_prohibition"`             // 是否开启全员禁言
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
}

type GroupValidListRequest struct {
	UserID   uint `header:"userID"`
	Page     int  `form:"page,optional"`
	PageSize int  `form:"pageSize,optional"`
}

type GroupValidListResponse struct {
	List  []GroupValidInfoResponse `json:"list"`
	Count int                      `json:"count"`
}

type GroupValidStatusRequest struct {
	UserID  uint `header:"userID"`
	ValidID uint `json:"validID"` // 验证id
	Status  int8 `json:"status"`  // 状态
}

type GroupfriendsListRequest struct {
	UserID  uint `header:"userID"`
	GroupID uint `form:"id"` // 群id
}

type GroupfriendsListResponse struct {
	List  []GroupfriendsResponse `json:"list"`
	Count int                    `json:"count"`
}
